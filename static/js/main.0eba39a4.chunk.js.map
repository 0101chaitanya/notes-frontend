{"version":3,"sources":["components/Note.jsx","components/Notification.jsx","components/Footer.jsx","services/notes.jsx","App.jsx","index.jsx"],"names":["Note","note","toggleImportanceOf","label","important","className","content","onClick","id","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","request","axios","get","nonExisting","date","then","res","data","concat","getAll","initialNotes","length","find","n","changedNote","newObject","put","update","returnedNote","map","catch","err","setTimeout","filter","item","notesToShow","onSubmit","e","preventDefault","noteObject","Date","toISOString","Math","random","post","returnedNotes","onChange","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0eba39a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportanceOf }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}{\" \"}\n      <button onClick={() => toggleImportanceOf(note.id)}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","const Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://hidden-reef-53498.herokuapp.com/api/notes\"; //\"http://localhost:3001/api/notes\" ||\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((res) => res.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((res) => res.data);\n};\n\nexport { getAll, create, update };\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport { create, update, getAll } from \"./services/notes\";\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Effect:\");\n    getAll().then((initialNotes) => {\n      console.log(\"Promise fulfilled\");\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    create(noteObject).then((returnedNotes) => {\n      setNotes(notes.concat(returnedNotes));\n      setNewNote(\"\");\n    });\n  };\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((err) => {\n        //alert(`The note \"${note.content}\" was already deleted from server`);\n        setErrorMessage(\n          `The note \"${note.content}\" was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((item) => item.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n  return (\n    <div>\n      <h1>Notes</h1>\n      {errorMessage && <Notification message={errorMessage} />}\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((item) => (\n          <Note\n            key={item.id}\n            toggleImportanceOf={toggleImportanceOf}\n            note={item}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input onChange={handleNoteChange} value={newNote} />\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n/* const notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n];\n */\n"],"sourceRoot":""}
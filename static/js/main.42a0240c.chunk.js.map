{"version":3,"sources":["components/Note.jsx","components/Notification.jsx","components/Footer.jsx","services/login.jsx","services/notes.jsx","components/loginForm.jsx","App.jsx","index.jsx"],"names":["Note","note","toggleImportanceOf","label","important","className","content","onClick","id","Notification","message","Footer","style","color","fontStyle","fontSize","login","credentials","a","axios","post","response","console","log","data","baseUrl","token","setToken","newToken","split","getAll","config","headers","Authorization","get","request","create","newObject","update","put","LoginForm","handleLogin","setPassword","setUsername","username","password","onSubmit","type","value","name","onChange","target","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","useEffect","then","initialNotes","length","event","preventDefault","window","localStorage","setItem","JSON","stringify","setTimeout","loggedUserJSON","getItem","parse","find","n","changedNote","returnedNote","map","catch","err","filter","item","notesToShow","e","noteObject","date","Date","toISOString","Math","random","returnedNotes","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42a0240c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportanceOf }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}{\" \"}\n      <button onClick={() => toggleImportanceOf(note.id)}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","const Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"/api/users/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  console.log(response.data);\n  return response.data;\n};\n\nexport default  login ;\n","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/api/notes\" ;//\"https://hidden-reef-53498.herokuapp.com/api/notes\"; \"http://localhost:3001/api/notes\"\n\nlet token = null;\n\nconst setToken = newToken =>{\n\n  console.log(\"new token: \" + newToken);\n  token = \"Bearer \" + newToken.split(\" \")[1];\n  \n}\nconst getAll = async() => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  };\n  console.log(config);\n  const request = await axios.get(baseUrl, config);\n  console.log(request);\n  return await request.data;\n};\n\nconst create = async(newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    } \n  }\n  const request = await axios.post(baseUrl, newObject , config);\n  console.log(request);\n  return await request.data;\n};\n\nconst update = async (id, newObject) => {\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n  const request = await axios.put(`${baseUrl}/${id}`, newObject ,config);\n  return request.data;\n};\n\nexport { getAll, create, update ,setToken };\n","const LoginForm = ({\n    handleLogin ,setPassword, setUsername, username, password,\n})=>{\n\n    return (\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    );\n}\n\nexport default LoginForm;","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport login from \"./services/login\";\nimport { create, update, getAll, setToken } from \"./services/notes\";\nimport LoginForm from \"./components/loginForm\";\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n   const [username, setUsername] = useState(\"\");\n   const [password, setPassword] = useState(\"\"); \n   const [user, setUser] = useState(null);\n  useEffect(() => {\n   \n   if(user){\n\n     console.log(\"Effect:\");\n     getAll().then((initialNotes) => {\n       console.log(\"Promise fulfilled\");\n       setNotes(initialNotes);\n      });\n    }\n    }, [user]);\n    \n  console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    create(noteObject).then((returnedNotes) => {\n      setNotes(notes.concat(returnedNotes));\n      setNewNote(\"\");\n    });\n  };\n  \n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n const handleLogin = async(event) => {\n   event.preventDefault();\n  // console.log(\"logging in with\", username, password);\n \ntry {\nconst data = await login({\n  username, password,\n})\nconsole.log(data)\n //setUser(data.user);\n window.localStorage.setItem('currentUser', JSON.stringify(data));\n setToken((data.token));\n console.log(\"token\",data.token)\n setUsername(\"\");\n setPassword(\"\");\n}catch(err) {\n  setErrorMessage(\"Wrong credentials\");\n  setTimeout(() => {\n    setErrorMessage(null);\n  }, 5000);\n}\n};\n\nuseEffect(() => {\n  const loggedUserJSON = window.localStorage.getItem(\"currentUser\");\n  if (loggedUserJSON) {\n    const data = JSON.parse(loggedUserJSON);\n    setUser(data.user);\n    setToken(data.token);\n  }\n},[] );\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((err) => {\n        //alert(`The note \"${note.content}\" was already deleted from server`);\n        setErrorMessage(\n          `The note \"${note.content}\" was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((item) => item.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n  return (\n    <div>\n      <h1>Notes</h1>\n      <h3>Current User:{user && user.username}</h3>\n      {errorMessage && <Notification message={errorMessage} />}\n{\nuser  === null &&\n      <LoginForm\n        handleLogin={handleLogin}\n        setPassword={setPassword}\n        setUsername={setUsername}\n        username={username}\n        password={password}\n      />\n}\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((item) => (\n          <Note\n            key={item.id}\n            toggleImportanceOf={toggleImportanceOf}\n            note={item}\n          />\n        ))}\n      </ul>\n    {\n  user  !== null &&\n      (<form onSubmit={addNote}>\n        <input onChange={handleNoteChange} value={newNote} />\n        <button type=\"submit\">Save</button>\n      </form>)\n    }\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n/* const notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n];\n */\n"],"sourceRoot":""}